on:
  push:
    branches: [main]
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    env: # Or as an environment variable
      HOST: ${{ secrets.HOST }}
      LF_PK: ${{ secrets.LF_PK }}
      LF_SK: ${{ secrets.LF_SK }}
    strategy:
      matrix:
        python-version:
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - "pypy2"
          - "pypy3"
    name: Python version ${{ matrix.python-version }} CI
    steps:
      - uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        # see details (matrix, python-version, python-version-file, etc.)
        # https://github.com/actions/setup-python

      - name: Install poetry
        uses: abatilo/actions-poetry@v2

      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        run: poetry install

      - name: Run the automated tests (for example)
        run: poetry run pytest -s -v --log-cli-level=INFO
