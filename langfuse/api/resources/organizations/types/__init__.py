# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .delete_membership_request import DeleteMembershipRequest
    from .membership_deletion_response import MembershipDeletionResponse
    from .membership_request import MembershipRequest
    from .membership_response import MembershipResponse
    from .membership_role import MembershipRole
    from .memberships_response import MembershipsResponse
    from .organization_project import OrganizationProject
    from .organization_projects_response import OrganizationProjectsResponse
_dynamic_imports: typing.Dict[str, str] = {
    "DeleteMembershipRequest": ".delete_membership_request",
    "MembershipDeletionResponse": ".membership_deletion_response",
    "MembershipRequest": ".membership_request",
    "MembershipResponse": ".membership_response",
    "MembershipRole": ".membership_role",
    "MembershipsResponse": ".memberships_response",
    "OrganizationProject": ".organization_project",
    "OrganizationProjectsResponse": ".organization_projects_response",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(
            f"No {attr_name} found in _dynamic_imports for module name -> {__name__}"
        )
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(
            f"Failed to import {attr_name} from {module_name}: {e}"
        ) from e
    except AttributeError as e:
        raise AttributeError(
            f"Failed to get {attr_name} from {module_name}: {e}"
        ) from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "DeleteMembershipRequest",
    "MembershipDeletionResponse",
    "MembershipRequest",
    "MembershipResponse",
    "MembershipRole",
    "MembershipsResponse",
    "OrganizationProject",
    "OrganizationProjectsResponse",
]
