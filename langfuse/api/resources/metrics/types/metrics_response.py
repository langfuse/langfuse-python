# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class MetricsResponse(UniversalBaseModel):
    data: typing.List[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field()
    """
    The metrics data. Each item in the list contains the metric values and dimensions requested in the query.
    Format varies based on the query parameters.
    Histograms will return an array with [lower, upper, height] tuples.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
