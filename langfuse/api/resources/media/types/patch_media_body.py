# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata


class PatchMediaBody(UniversalBaseModel):
    uploaded_at: typing_extensions.Annotated[
        dt.datetime, FieldMetadata(alias="uploadedAt")
    ] = pydantic.Field()
    """
    The date and time when the media record was uploaded
    """

    upload_http_status: typing_extensions.Annotated[
        int, FieldMetadata(alias="uploadHttpStatus")
    ] = pydantic.Field()
    """
    The HTTP status code of the upload
    """

    upload_http_error: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="uploadHttpError")
    ] = pydantic.Field(default=None)
    """
    The HTTP error message of the upload
    """

    upload_time_ms: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="uploadTimeMs")
    ] = pydantic.Field(default=None)
    """
    The time in milliseconds it took to upload the media record
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
