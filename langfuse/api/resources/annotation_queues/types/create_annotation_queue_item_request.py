# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from .annotation_queue_object_type import AnnotationQueueObjectType
from .annotation_queue_status import AnnotationQueueStatus


class CreateAnnotationQueueItemRequest(UniversalBaseModel):
    object_id: typing_extensions.Annotated[str, FieldMetadata(alias="objectId")]
    object_type: typing_extensions.Annotated[
        AnnotationQueueObjectType, FieldMetadata(alias="objectType")
    ]
    status: typing.Optional[AnnotationQueueStatus] = pydantic.Field(default=None)
    """
    Defaults to PENDING for new queue items
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
