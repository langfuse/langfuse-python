# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .types import (
        AnnotationQueue,
        AnnotationQueueAssignmentRequest,
        AnnotationQueueItem,
        AnnotationQueueObjectType,
        AnnotationQueueStatus,
        CreateAnnotationQueueAssignmentResponse,
        CreateAnnotationQueueItemRequest,
        CreateAnnotationQueueRequest,
        DeleteAnnotationQueueAssignmentResponse,
        DeleteAnnotationQueueItemResponse,
        PaginatedAnnotationQueueItems,
        PaginatedAnnotationQueues,
        UpdateAnnotationQueueItemRequest,
    )
_dynamic_imports: typing.Dict[str, str] = {
    "AnnotationQueue": ".types",
    "AnnotationQueueAssignmentRequest": ".types",
    "AnnotationQueueItem": ".types",
    "AnnotationQueueObjectType": ".types",
    "AnnotationQueueStatus": ".types",
    "CreateAnnotationQueueAssignmentResponse": ".types",
    "CreateAnnotationQueueItemRequest": ".types",
    "CreateAnnotationQueueRequest": ".types",
    "DeleteAnnotationQueueAssignmentResponse": ".types",
    "DeleteAnnotationQueueItemResponse": ".types",
    "PaginatedAnnotationQueueItems": ".types",
    "PaginatedAnnotationQueues": ".types",
    "UpdateAnnotationQueueItemRequest": ".types",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(
            f"No {attr_name} found in _dynamic_imports for module name -> {__name__}"
        )
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(
            f"Failed to import {attr_name} from {module_name}: {e}"
        ) from e
    except AttributeError as e:
        raise AttributeError(
            f"Failed to get {attr_name} from {module_name}: {e}"
        ) from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "AnnotationQueue",
    "AnnotationQueueAssignmentRequest",
    "AnnotationQueueItem",
    "AnnotationQueueObjectType",
    "AnnotationQueueStatus",
    "CreateAnnotationQueueAssignmentResponse",
    "CreateAnnotationQueueItemRequest",
    "CreateAnnotationQueueRequest",
    "DeleteAnnotationQueueAssignmentResponse",
    "DeleteAnnotationQueueItemResponse",
    "PaginatedAnnotationQueueItems",
    "PaginatedAnnotationQueues",
    "UpdateAnnotationQueueItemRequest",
]
