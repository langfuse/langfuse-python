# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from .comment_object_type import CommentObjectType


class Comment(UniversalBaseModel):
    id: str
    project_id: typing_extensions.Annotated[str, FieldMetadata(alias="projectId")]
    created_at: typing_extensions.Annotated[
        dt.datetime, FieldMetadata(alias="createdAt")
    ]
    updated_at: typing_extensions.Annotated[
        dt.datetime, FieldMetadata(alias="updatedAt")
    ]
    object_type: typing_extensions.Annotated[
        CommentObjectType, FieldMetadata(alias="objectType")
    ]
    object_id: typing_extensions.Annotated[str, FieldMetadata(alias="objectId")]
    content: str
    author_user_id: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="authorUserId")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
