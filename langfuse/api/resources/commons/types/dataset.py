# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata


class Dataset(UniversalBaseModel):
    id: str
    name: str
    description: typing.Optional[str] = None
    metadata: typing.Optional[typing.Optional[typing.Any]] = None
    project_id: typing_extensions.Annotated[str, FieldMetadata(alias="projectId")]
    created_at: typing_extensions.Annotated[
        dt.datetime, FieldMetadata(alias="createdAt")
    ]
    updated_at: typing_extensions.Annotated[
        dt.datetime, FieldMetadata(alias="updatedAt")
    ]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
