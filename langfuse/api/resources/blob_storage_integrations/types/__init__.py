# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .blob_storage_export_frequency import BlobStorageExportFrequency
    from .blob_storage_export_mode import BlobStorageExportMode
    from .blob_storage_integration_deletion_response import (
        BlobStorageIntegrationDeletionResponse,
    )
    from .blob_storage_integration_file_type import BlobStorageIntegrationFileType
    from .blob_storage_integration_response import BlobStorageIntegrationResponse
    from .blob_storage_integration_type import BlobStorageIntegrationType
    from .blob_storage_integrations_response import BlobStorageIntegrationsResponse
    from .create_blob_storage_integration_request import (
        CreateBlobStorageIntegrationRequest,
    )
_dynamic_imports: typing.Dict[str, str] = {
    "BlobStorageExportFrequency": ".blob_storage_export_frequency",
    "BlobStorageExportMode": ".blob_storage_export_mode",
    "BlobStorageIntegrationDeletionResponse": ".blob_storage_integration_deletion_response",
    "BlobStorageIntegrationFileType": ".blob_storage_integration_file_type",
    "BlobStorageIntegrationResponse": ".blob_storage_integration_response",
    "BlobStorageIntegrationType": ".blob_storage_integration_type",
    "BlobStorageIntegrationsResponse": ".blob_storage_integrations_response",
    "CreateBlobStorageIntegrationRequest": ".create_blob_storage_integration_request",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(
            f"No {attr_name} found in _dynamic_imports for module name -> {__name__}"
        )
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(
            f"Failed to import {attr_name} from {module_name}: {e}"
        ) from e
    except AttributeError as e:
        raise AttributeError(
            f"Failed to get {attr_name} from {module_name}: {e}"
        ) from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "BlobStorageExportFrequency",
    "BlobStorageExportMode",
    "BlobStorageIntegrationDeletionResponse",
    "BlobStorageIntegrationFileType",
    "BlobStorageIntegrationResponse",
    "BlobStorageIntegrationType",
    "BlobStorageIntegrationsResponse",
    "CreateBlobStorageIntegrationRequest",
]
