# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class BlobStorageExportMode(str, enum.Enum):
    FULL_HISTORY = "FULL_HISTORY"
    FROM_TODAY = "FROM_TODAY"
    FROM_CUSTOM_DATE = "FROM_CUSTOM_DATE"

    def visit(
        self,
        full_history: typing.Callable[[], T_Result],
        from_today: typing.Callable[[], T_Result],
        from_custom_date: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is BlobStorageExportMode.FULL_HISTORY:
            return full_history()
        if self is BlobStorageExportMode.FROM_TODAY:
            return from_today()
        if self is BlobStorageExportMode.FROM_CUSTOM_DATE:
            return from_custom_date()
