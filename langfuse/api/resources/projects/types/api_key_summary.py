# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata


class ApiKeySummary(UniversalBaseModel):
    """
    Summary of an API key
    """

    id: str
    created_at: typing_extensions.Annotated[
        dt.datetime, FieldMetadata(alias="createdAt")
    ]
    expires_at: typing_extensions.Annotated[
        typing.Optional[dt.datetime], FieldMetadata(alias="expiresAt")
    ] = None
    last_used_at: typing_extensions.Annotated[
        typing.Optional[dt.datetime], FieldMetadata(alias="lastUsedAt")
    ] = None
    note: typing.Optional[str] = None
    public_key: typing_extensions.Annotated[str, FieldMetadata(alias="publicKey")]
    display_secret_key: typing_extensions.Annotated[
        str, FieldMetadata(alias="displaySecretKey")
    ]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
