# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata


class Project(UniversalBaseModel):
    id: str
    name: str
    metadata: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    Metadata for the project
    """

    retention_days: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="retentionDays")
    ] = pydantic.Field(default=None)
    """
    Number of days to retain data. Null or 0 means no retention. Omitted if no retention is configured.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
