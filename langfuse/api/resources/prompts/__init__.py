# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .types import (
        BasePrompt,
        ChatMessage,
        ChatMessageWithPlaceholders,
        ChatMessageWithPlaceholders_Chatmessage,
        ChatMessageWithPlaceholders_Placeholder,
        ChatPrompt,
        CreateChatPromptRequest,
        CreatePromptRequest,
        CreatePromptRequest_Chat,
        CreatePromptRequest_Text,
        CreateTextPromptRequest,
        PlaceholderMessage,
        Prompt,
        PromptMeta,
        PromptMetaListResponse,
        Prompt_Chat,
        Prompt_Text,
        TextPrompt,
    )
_dynamic_imports: typing.Dict[str, str] = {
    "BasePrompt": ".types",
    "ChatMessage": ".types",
    "ChatMessageWithPlaceholders": ".types",
    "ChatMessageWithPlaceholders_Chatmessage": ".types",
    "ChatMessageWithPlaceholders_Placeholder": ".types",
    "ChatPrompt": ".types",
    "CreateChatPromptRequest": ".types",
    "CreatePromptRequest": ".types",
    "CreatePromptRequest_Chat": ".types",
    "CreatePromptRequest_Text": ".types",
    "CreateTextPromptRequest": ".types",
    "PlaceholderMessage": ".types",
    "Prompt": ".types",
    "PromptMeta": ".types",
    "PromptMetaListResponse": ".types",
    "Prompt_Chat": ".types",
    "Prompt_Text": ".types",
    "TextPrompt": ".types",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(
            f"No {attr_name} found in _dynamic_imports for module name -> {__name__}"
        )
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(
            f"Failed to import {attr_name} from {module_name}: {e}"
        ) from e
    except AttributeError as e:
        raise AttributeError(
            f"Failed to get {attr_name} from {module_name}: {e}"
        ) from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "BasePrompt",
    "ChatMessage",
    "ChatMessageWithPlaceholders",
    "ChatMessageWithPlaceholders_Chatmessage",
    "ChatMessageWithPlaceholders_Placeholder",
    "ChatPrompt",
    "CreateChatPromptRequest",
    "CreatePromptRequest",
    "CreatePromptRequest_Chat",
    "CreatePromptRequest_Text",
    "CreateTextPromptRequest",
    "PlaceholderMessage",
    "Prompt",
    "PromptMeta",
    "PromptMetaListResponse",
    "Prompt_Chat",
    "Prompt_Text",
    "TextPrompt",
]
