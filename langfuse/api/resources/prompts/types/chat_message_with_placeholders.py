# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ChatMessageWithPlaceholders_Chatmessage(UniversalBaseModel):
    type: typing.Literal["chatmessage"] = "chatmessage"
    role: str
    content: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class ChatMessageWithPlaceholders_Placeholder(UniversalBaseModel):
    type: typing.Literal["placeholder"] = "placeholder"
    name: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


ChatMessageWithPlaceholders = typing.Union[
    ChatMessageWithPlaceholders_Chatmessage, ChatMessageWithPlaceholders_Placeholder
]
