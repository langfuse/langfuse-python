# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from .resource_meta import ResourceMeta
from .schema_extension import SchemaExtension


class ResourceType(UniversalBaseModel):
    schemas: typing.Optional[typing.List[str]] = None
    id: str
    name: str
    endpoint: str
    description: str
    schema_: typing_extensions.Annotated[str, FieldMetadata(alias="schema")]
    schema_extensions: typing_extensions.Annotated[
        typing.List[SchemaExtension], FieldMetadata(alias="schemaExtensions")
    ]
    meta: ResourceMeta

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
