# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from .scim_email import ScimEmail
from .scim_name import ScimName
from .user_meta import UserMeta


class ScimUser(UniversalBaseModel):
    schemas: typing.List[str]
    id: str
    user_name: typing_extensions.Annotated[str, FieldMetadata(alias="userName")]
    name: ScimName
    emails: typing.List[ScimEmail]
    meta: UserMeta

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
