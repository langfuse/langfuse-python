# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from .authentication_scheme import AuthenticationScheme
from .bulk_config import BulkConfig
from .filter_config import FilterConfig
from .resource_meta import ResourceMeta
from .scim_feature_support import ScimFeatureSupport


class ServiceProviderConfig(UniversalBaseModel):
    schemas: typing.List[str]
    documentation_uri: typing_extensions.Annotated[
        str, FieldMetadata(alias="documentationUri")
    ]
    patch: ScimFeatureSupport
    bulk: BulkConfig
    filter: FilterConfig
    change_password: typing_extensions.Annotated[
        ScimFeatureSupport, FieldMetadata(alias="changePassword")
    ]
    sort: ScimFeatureSupport
    etag: ScimFeatureSupport
    authentication_schemes: typing_extensions.Annotated[
        typing.List[AuthenticationScheme], FieldMetadata(alias="authenticationSchemes")
    ]
    meta: ResourceMeta

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
