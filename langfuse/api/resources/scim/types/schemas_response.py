# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from .schema_resource import SchemaResource


class SchemasResponse(UniversalBaseModel):
    schemas: typing.List[str]
    total_results: typing_extensions.Annotated[int, FieldMetadata(alias="totalResults")]
    resources: typing_extensions.Annotated[
        typing.List[SchemaResource], FieldMetadata(alias="Resources")
    ]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
